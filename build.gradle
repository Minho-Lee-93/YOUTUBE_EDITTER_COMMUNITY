plugins {
    id 'org.springframework.boot' version '2.1.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.dailymission.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    // jojuldu
    jcenter()
}

dependencies {
    //db
    //implementation 'org.mariadb.jdbc:mariadb-java-client'

    // h2 for test
    compile 'com.h2database:h2'

    // mustache
    compile 'org.springframework.boot:spring-boot-starter-mustache'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    // lombok
    compileOnly 'org.projectlombok:lombok'

    // devtool
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // annotation processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    // querydsl
    def querydslVersion = "4.1.4"
    compile ("com.querydsl:querydsl-apt")
    compile ("com.querydsl:querydsl-jpa")

    // gson dependency
    compile 'com.google.code.gson:gson'

    // oauth
    compile 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // session db
    compile 'org.springframework.session:spring-session-jdbc'
}

test {
    useJUnitPlatform()
}

// querydsl 적용
def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}